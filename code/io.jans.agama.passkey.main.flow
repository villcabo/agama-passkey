Flow io.jans.agama.passkey.main
     Basepath ""
Log "@debug --> Main flow started!"
loginForm = { success: true }
casaApi = Call io.jans.agama.passkey.CasaApi#new

authService = Call io.jans.as.server.service.AuthenticationService#class
cdiUtil = Call io.jans.service.cdi.util.CdiUtil#bean authService
authResult = {}

Repeat 3 times max
     creds = RRF "main.ftlh" loginForm
     Log "@debug Login form response %" creds
     When creds.loginBtn is ""
         authResult.success = Call cdiUtil authenticate creds.username creds.password
         authResult.uid = creds.username
         Log "@debug Call authResult response %" authResult
         When authResult.success is true
            userData = Call io.jans.agama.passkey.IdentityProcessor#accountFromUid authResult.uid
            Log "@debug Call accountFromUid response %" userData
            aux = Trigger io.jans.agama.passkey.list userData

     loginForm.username = creds.username
     When userData is not null
          inum = userData.inum
          uid = userData.uid
          mfaInfo = Call casaApi getMFAUserInfoByFido2 inum
          Log "@debug MfaInfo response: %" mfaInfo
          count = mfaInfo.count
          Log "@debug User % has % credentials enrolled" inum count
          When count is 0
               it_aagka = { success: false, error: "Your account has no security key configured." }
               Finish it_aagka
          withEscape = true
          fidoAuthn = Trigger io.jans.agama.passkey.fidoAuthn userData withEscape
          Log "@debug Response FidoAuthn %" fidoAuthn
          When fidoAuthn.success is true
               Finish uid
     loginForm.success = false
it_sxdfm = { success: false, error: "Login attempt exceeded." }
Finish it_sxdfm
