Flow io.jans.agama.passkey.list
     Basepath ""
     Inputs userData scimSetting
Log "@debug **=> List passkey flow started!, Inputs userData: %, scimSetting: %" userData scimSetting

inum = userData.inum
uid = userData.uid
fidoValidator = Call io.jans.agama.passkey.authn.FidoValidator#new
scimFido2Helper = Call io.jans.agama.passkey.ScimFido2Helper#new scimSetting
fidoDevices = Call scimFido2Helper getFidoDeviceByUser inum
Log "@debug Call ScimFido2Helper.getFidoDeviceByUser response %" fidoDevices
obj = { count: fidoDevices.count, devices: fidoDevices.devices, assertion: "{}", isAssertion: false, showError: false, errorTitle: "", errorMessage: "" }

Repeat 50 times max
    listForm = RRF "passkey-list.ftlh" obj
    Log "@debug List passkey form response %" listForm

    When listForm.addAPasskeyBtn is ""
        addTrigger = Trigger io.jans.agama.passkey.add userData
        Log "@debug Add passkey trigger response %" addTrigger
        obj.showError = false
        obj.isAssertion = false
        When addTrigger.success is true
            fidoDevices = Call scimFido2Helper getFidoDeviceByUser inum
            obj.count = fidoDevices.count
            obj.devices = fidoDevices.devices

    When listForm.loginWithPasskeyBtn is ""
        desAssertion = Call fidoValidator assertionRequest uid
        obj.showError = false
        obj.isAssertion = true
        obj.assertion = desAssertion

    When listForm.skipped is ""
        obj.isAssertion = false
        obj.showError = true
        obj.errorTitle = "Passkey authentication failed."
        obj.errorMessage = ""

    When listForm.tokenResponse is ""
        verifyResponse | E = Call fidoValidator verify listForm.tokenResponse
        When E is null
            Log "@debug FidoValidator.verify is crashed: %" E
            obj.showError = true
            obj.errorTitle = "Passkey authentication failed."
            obj.errorMessage = E

        Log "@debug FidoValidator.verify is success: %" verifyResponse
        res = { success: true, message: "Passkey authentication success" }
        Finish res

res = { success: false, message: "Passkey list limited exceeded" }
Finish res
