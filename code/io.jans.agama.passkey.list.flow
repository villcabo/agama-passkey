Flow io.jans.agama.passkey.list
     Basepath ""
     Inputs userData scimSetting
Log "@debug **=> List passkey flow started!, Inputs userData %" userData

inum = userData.inum
uid = userData.uid
obj = { count: 0, assertion: "{}", isAssertion: false, showError: false, errorTitle: "", errorMessage: "" }

Repeat 30 times max
    enrollmentHelper = Call io.jans.agama.passkey.EnrollmentHelper#new
    mfaInfo = Call enrollmentHelper getMFAUserInfoByFido2 inum
    Log "@debug Call getMFAUserInfoByFido2 response %" mfaInfo
    count = mfaInfo.count
    Log "@debug User % has % credentials enrolled" uid count
    obj.count = count

    listForm = RRF "passkey-list.ftlh" obj
    Log "@debug List passkey form response %" listForm
    When listForm.addAPasskeyBtn is ""
        addTrigger = Trigger io.jans.agama.passkey.add userData
        Log "@debug Add passkey trigger response %" addTrigger
        obj.showError = false

    When listForm.loginWithPasskeyBtn is ""
        fidoValidator = Call io.jans.agama.passkey.authn.FidoValidator#new
        assertionRequest = Call fidoValidator assertionRequest uid
        obj.showError = false
        obj.isAssertion = true
        obj.assertion = assertionRequest

        listForm1 = RRF "passkey-list.ftlh" obj
        Log "@debug List passkey form1 response %" listForm1

        When listForm1.error is not ""
            // Assertion false
            obj.isAssertion = false
            obj.assertion = "{}"
            // Show Error
            obj.showError = true
            obj.errorTitle = listForm1.errorTitle
            obj.errorMessage = listForm1.errorMessage

            Log "@debug obj values %" obj

        When listForm1.tokenResponse is not ""
            verifyResponse | E = Call fidoValidator verify listForm1.tokenResponse
            Log "@debug Verify response %" verifyResponse
            When E is null
                Log "@debug Verify contains error %" E

            res = { success: true, message: "Done" }
            Finish res

res = { success: false, message: "Limited exceeded" }
Finish res
